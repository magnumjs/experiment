name: Build and Deploy to AWS

on:
  push:
    branches:
      - master
# Add "id-token" with the intended permissions. 
permissions:
  contents: 'read'
  id-token: 'write'
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, tag, and push image to Amazon ECR Public
        run: |
          ECR_REGISTRY="public.ecr.aws/${{ secrets.ECR_PUBLIC_ALIAS }}"
          IMAGE_NAME="${{ secrets.ECR_REPOSITORY }}"
          IMAGE_TAG="latest"
          if [ -z "$ECR_REGISTRY" ] || [ -z "$IMAGE_NAME" ] || [ -z "$IMAGE_TAG" ]; then
            echo "ECR_REGISTRY, IMAGE_NAME, or IMAGE_TAG is empty. Check your secrets." && exit 1
          fi
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      # - name: Deploy Docker image to EC2 via SSH
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ec2-user
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       docker pull public.ecr.aws/${{ secrets.ECR_PUBLIC_ALIAS }}/${{ secrets.ECR_REPOSITORY }}:latest
      #       sudo docker stop app || true
      #       sudo docker rm app || true
      #       sudo docker run -d --name app -p 80:3000 public.ecr.aws/${{ secrets.ECR_PUBLIC_ALIAS }}/${{ secrets.ECR_REPOSITORY }}:latest
